<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.codyy.oc.admin.dao.AdminUserMapper" >

    <sql id="pageTop">
		select * from (select t.*,rownum as r from(
	</sql>
	<sql id="pageBottom">
	<![CDATA[
		) t) t1 where t1.r > #{start} and t1.r <= #{end}
		]]>
	</sql>
	
	<!-- 根据传来的id来删除用户的所有信息-->
	<delete id="deleteAdminUsersById" parameterType="java.lang.String">
	     delete from ADMIN_USER where user_id=#{adminUserId}
	</delete>
	
	
	<!-- 验证注册用户-->
	<select id="selUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
	          select * from ADMIN_USER t where t.username=#{userName}
	</select>
	
	<!--  修改操作中验证用户-->
	<select id="checkSelUpteName" parameterType="com.codyy.oc.admin.entity.AdminUser" resultMap="BaseResultMap">
	          select * from ADMIN_USER t where t.username=#{userName} and t.user_id=#{adminUserId}
	</select>
	
	
	<!-- 添加用户AdminUser表-->
	<insert id="insertAdminUser" parameterType="com.codyy.oc.admin.entity.AdminUser" >
	insert into
	ADMIN_USER(USER_ID,USERNAME,PASSWORD,REALNAME,CREATE_TIME,DEP_ID,POSITION,POST_ID,
	WORK_STATUS,SALARY_SCALE,ENTRY_DATE,WORKING_YEARS,SALARY_BEGIN_DATE,PROBATION_PERIOD,EXPECTED_DATE,
	FWQ_AGREEMENT,FWQ_NUM,LABOUR_BEGIN_TIME,LABOUR_END_TIME,SIGN_TIME,INSURANCE_BASE,FILING_DATE,LEAVE_DATE,RETIRED_DATE)
	values(#{userId},#{userName},#{password},#{realName},#{createTime},#{depId},#{position},#{postId},
	#{workStatus},#{salaryScale},#{entryDate},#{workingYears},#{salaryBeginDate},
	#{probationPeriod},#{expectedDate},#{fwqAgreement},#{fwqNum},#{labourBeginTime},#{labourEndTime},#{signTime},
	#{insuranceBase},#{filingDate},#{leaveDate},#{retiredDate})    
	</insert>
	
	<!-- 修改用户信息-->
	<update id="updateAdminsUser" parameterType="com.codyy.oc.admin.entity.AdminUser">
	     update ADMIN_USER u
		<set>
			<if test="userName != null">
				u.USERNAME = #{userName},
			</if>
			<if test="realName != null">
				u.REALNAME = #{realName},
			</if>
			<if test="position != null">
				u.POSITION = #{position},
			</if>
			<if test="password != null and password !=''">
				u.PASSWORD = #{password},
			</if>
			
		</set>
		<where>
			<if test="adminUserId != null">
            u.user_id = #{adminUserId}
          </if>
      </where> 
	</update>
	
	<!-- 用户按照id进行查询-->
	<resultMap id="BaseResultMap" type="com.codyy.oc.admin.entity.AdminUser">
		<id column="user_id" property="adminUserId" jdbcType="VARCHAR" />
		<result column="USERNAME" property="userName" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="REALNAME" property="realName" jdbcType="VARCHAR" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
		<result column="CREATE_USER_ID" property="createUserId" jdbcType="VARCHAR" />
		<result column="DELETE_FLAG" property="deleteFlag" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="WEIXIN_NUM" property="weixin_num" jdbcType="VARCHAR" />
		<result column="POSITION" property="position" jdbcType="VARCHAR" />
		<collection property="adminUserPer" ofType="com.codyy.oc.admin.entity.AdminUserPermission" column="user_id" select="collectionMap"></collection>
	</resultMap>
	
	<resultMap id="UserResultMap" type="com.codyy.oc.admin.entity.AdminUser">
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="delete_flag" jdbcType="CHAR" property="deleteFlag" />
    <result column="dep_id" jdbcType="VARCHAR" property="depId" />
    <result column="post_id" jdbcType="VARCHAR" property="postId" />
    <result column="work_status" jdbcType="VARCHAR" property="workStatus" />
    <result column="salary_scale" jdbcType="INTEGER" property="salaryScale" />
    <result column="entry_date" jdbcType="TIMESTAMP" property="entryDate" />
    <result column="working_years" jdbcType="DOUBLE" property="workingYears" />
    <result column="salary_begin_date" jdbcType="TIMESTAMP" property="salaryBeginDate" />
    <result column="probation_period" jdbcType="TIMESTAMP" property="probationPeriod" />
    <result column="expected_date" jdbcType="TIMESTAMP" property="expectedDate" />
    <result column="fwq_agreement" jdbcType="VARCHAR" property="fwqAgreement" />
    <result column="fwq_num" jdbcType="INTEGER" property="fwqNum" />
    <result column="labour_begin_time" jdbcType="TIMESTAMP" property="labourBeginTime" />
    <result column="labour_end_time" jdbcType="TIMESTAMP" property="labourEndTime" />
    <result column="sign_time" jdbcType="INTEGER" property="signTime" />
    <result column="insurance_base" jdbcType="INTEGER" property="insuranceBase" />
    <result column="filing_date" jdbcType="TIMESTAMP" property="filingDate" />
    <result column="leave_date" jdbcType="TIMESTAMP" property="leaveDate" />
    <result column="retired_date" jdbcType="TIMESTAMP" property="retiredDate" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
	
	
	  <update id="updateById" parameterType="map">
    update ADMIN_USER
    <set>
      <if test="record.userName != null">
        username = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        realname = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=CHAR},
      </if>
      <if test="record.depId != null">
        dep_id = #{record.depId,jdbcType=VARCHAR},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=VARCHAR},
      </if>
      <if test="record.workStatus != null">
        work_status = #{record.workStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryScale != null">
        salary_scale = #{record.salaryScale,jdbcType=INTEGER},
      </if>
      <if test="record.entryDate != null">
        entry_date = #{record.entryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workingYears != null">
        working_years = #{record.workingYears,jdbcType=DOUBLE},
      </if>
      <if test="record.salaryBeginDate != null">
        salary_begin_date = #{record.salaryBeginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.probationPeriod != null">
        probation_period = #{record.probationPeriod,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expectedDate != null">
        expected_date = #{record.expectedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fwqAgreement != null">
        fwq_agreement = #{record.fwqAgreement,jdbcType=VARCHAR},
      </if>
      <if test="record.fwqNum != null">
        fwq_num = #{record.fwqNum,jdbcType=INTEGER},
      </if>
      <if test="record.labourBeginTime != null">
        labour_begin_time = #{record.labourBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.labourEndTime != null">
        labour_end_time = #{record.labourEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signTime != null">
        sign_time = #{record.signTime,jdbcType=INTEGER},
      </if>
      <if test="record.insuranceBase != null">
        insurance_base = #{record.insuranceBase,jdbcType=INTEGER},
      </if>
      <if test="record.filingDate != null">
        filing_date = #{record.filingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.leaveDate != null">
        leave_date = #{record.leaveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.retiredDate != null">
        retired_date = #{record.retiredDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{record.userId,jdbcType=VARCHAR}
  </update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<resultMap id="adminPersissionMap" type="com.codyy.oc.admin.entity.AdminUserPermission">
	     <id column="ADMIN_PERMISSION_ID" property="adminPersId" jdbcType="VARCHAR"/>
	     <result column="user_id" property="adminUserId" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- 将每次返回的对象放入集合中-->
	<select id="collectionMap" resultMap="adminPersissionMap">
	      select ADMIN_PERMISSION_ID,user_id from admin_user_r_permission where user_id=#{user_id}
	</select>
	
	<!-- 根据用户的id来获取对应用户的所有信息-->
	<select id="getselcAdminUserById" parameterType="java.lang.String" resultMap="DefaultResultMap">
	    select au.*,
	    <include refid="UserDetail_Column_List" />
	    from ADMIN_USER au left join ADMIN_USER_DETAIL ad
	    on ad.user_id = au.user_id
	      where au.user_id=#{userId}
	</select>
	
	
	
  <sql id="UserDetail_Column_List">
     ad.user_detail_id as 'adminUserDetail.userDetailId', ad.user_id as 'adminUserDetail.userId', ad.sex as 'adminUserDetail.sex',
     ad.birthday as 'adminUserDetail.birthday', ad.age as 'adminUserDetail.age' , ad.birthday_month as 'adminUserDetail.birthdayMonth' , 
     ad.id_number as 'adminUserDetail.idNumber', ad.origin as 'adminUserDetail.origin',
     ad.domicile as 'adminUserDetail.domicile' , ad.nation as 'adminUserDetail.nation' , ad.marriage as 'adminUserDetail.marriage', 
     ad.political as 'adminUserDetail.political', ad.education as 'adminUserDetail.education', ad.major as 'adminUserDetail.major', 
     ad.university as 'adminUserDetail.university', ad.phone1 as 'adminUserDetail.phone1', ad.phone2 as 'adminUserDetail.phone2',
     ad.citizen_card as 'adminUserDetail.citizenCard', ad.payroll_card as 'adminUserDetail.payrollCard',
     ad.pdp_sj_a as 'adminUserDetail.pdpSjA',ad.pdp_sj_b  as 'adminUserDetail.pdpSjB', ad.pdp_sj_c as 'adminUserDetail.pdpSjC', ad.pdp_sj_d as 'adminUserDetail.pdpSjD', 
     ad.pdp_nj_a as 'adminUserDetail.pdpNjA', ad.pdp_nj_b as 'adminUserDetail.pdpNjB', ad.pdp_nj_c as 'adminUserDetail.pdpNjC', ad.pdp_nj_d as 'adminUserDetail.pdpNjD',
     ad.gx as 'adminUserDetail.gx',ad.sj as 'adminUserDetail.sj'
  </sql>
	
	
	<select id="getAdminUser" resultType="com.codyy.oc.admin.entity.AdminUser"  parameterType="map">
		select
			au.user_id    as userId,
			au.username 			as userName,
			au.password 			as password,
			au.realname 			as realName,
			au.create_time        as createTime,
			au.delete_flag        as deleteFlag,
			au.position             as position,
			au.dep_id              	as				  depId, 
			au.post_id              as            postId,
			au.work_status          as            workStatus,
			au.salary_scale         as            salaryScale,
			au.entry_date           as            entryDate,
			au.working_years        as            workingYears,
			au.salary_begin_date    as            salaryBeginDate,
			au.probation_period     as            probationPeriod,
			au.expected_date        as            expectedDate,
			au.fwq_agreement        as            fwqAgreement,
			au.fwq_num              as            fwqNum,
			au.labour_begin_time    as            labourBeginTime,
			au.labour_end_time     as            labourEndTime,
			au.sign_time            as            signTime,
			au.insurance_base       as            insuranceBase,
			au.filing_date          as            filingDate,
			au.leave_date           as            leaveDate,
			au.retired_date         as            retiredDate,
			
			 <include refid="UserDetail_Column_List" />
			
		from ADMIN_USER au left join ADMIN_USER_DETAIL ad
		 on au.user_id = ad.user_id
		where au.username = #{userName} 
			and au.password = #{password}
	</select>
	
	<!-- 新增用户维护关联 -->
	<insert id="insertAdminUserRole" parameterType="list">
		insert into admin_user_r_role(user_id, admin_role_id)  
		<foreach collection="list" item="items" open="(" close=")" separator="union all">
			select
				#{items.adminUserId} ,
				#{items.adminRoleId}
			from dual
		</foreach>
	</insert>
	
	<!-- 更新用户 -->
	<update id="updateAdminUser" parameterType="com.codyy.oc.admin.entity.AdminUser">
		update ADMIN_USER u
		<set>
			<if test="realName != null">
				u.realname = #{realName},
			</if>
			<if test="contact != null">
				u.contact = #{contact},
			</if>
			<if test="remark != null">
				u.remark = #{remark},
			</if>
			<if test="locked != null">
				u.locked = #{locked},
			</if>
			<if test="userName != null">
				u.username = #{userName},
			</if>
			<if test="password != null">
				u.password = #{password},
			</if>
		</set>
		<where>
			<if test="adminUserId != null">
            u.user_id = #{adminUserId}
          </if>
      </where>
	</update>
	
	<!-- 更新用户维护关联表 -->
	<delete id="deleteAdminUserRole" parameterType="java.lang.String">
		delete from admin_user_r_role ur where ur.user_id = #{adminUserId}
	</delete>
	
	<!-- 删除用户 -->
	<delete id="deleteAdminUserById" parameterType="java.lang.String">
		delete from ADMIN_USER u where u.user_id = #{adminUserId}
	</delete>
	
	<update id="updateAdminUserById" parameterType="java.lang.String">
		update ADMIN_USER u set u.delete_flag = 'Y' where u.user_id = #{adminUserId}
	</update>
	
	<!-- 根据管理员id获取管理员信息 -->
	<select id="findAdminUserById" resultType="com.codyy.oc.admin.entity.AdminUser" parameterType="java.lang.String">
		select 
			au.user_id as adminUserId,
			au.username 			as userName,
			au.password 			as password,
			au.realname 			as realName,
			au.contact  			as contact,
			au.locked   			as locked ,
			au.remark   			as remark,
			au.create_user_id	as createUserId
		from ADMIN_USER au 
		where au.user_id = #{id}
	</select>
	
	<!-- 根据用户ID查询其所属角色 -->
	<select id="findAdminUserRoleById" parameterType="java.lang.String" resultType="com.codyy.oc.admin.entity.AdminUserRole">
		select 
			au.user_id	adminUserId ,
			ar.admin_role_id 	adminRoleId , 
			ar.role_name 		adminRoleName 
		 from ADMIN_USER au, admin_user_r_role aur, admin_role ar
 		 where au.user_id = aur.user_id
   		 		 and aur.admin_role_id = ar.admin_role_id
		 		 and au.user_id = #{adminUserId}
	</select>
	
	<!-- 修改管理员密码 -->
	<update id="modifyPassword" parameterType="map" >
		update 
			ADMIN_USER au 
		set au.password = #{password} 
		where au.user_id = #{adminUserId}
	</update>	
	
	<!-- 分页条件查询用户 -->
	<select id="findPageList" resultType="com.codyy.oc.admin.view.AdminUserView" parameterType="com.codyy.commons.page.Page">
		select 
			u.user_id adminUserId,
       	u.username userName,
       	wm_concat(NVL(r.role_name, '-')) roleName, 
       	NVL(au.userName,'-') createAdminUser,
       	NVL2(u.create_time, to_char(u.create_time,'yyyy-MM-dd HH:mm:ss'), '') createTime
  		from ADMIN_USER u
	  		left join admin_user_r_role ur on u.user_id = ur.user_id
	  		left join admin_role r on ur.admin_role_id = r.admin_role_id
	    	left join ADMIN_USER au on u.create_user_id = au.user_id
	  		<where>
	  			and u.delete_flag = 'N'
	  			<if test="map.adminRoleId != ''">
	  				and r.admin_role_id = #{map.adminRoleId}
	  			</if>
	  			<if test="map.userName != ''">
	  				and u.username like '%'|| #{map.userName} || '%'
	  			</if>
	  		</where>
  			group by u.user_id ,u.username, au.userName, NVL2(u.create_time, to_char(u.create_time,'yyyy-MM-dd HH:mm:ss'), '')
  			order by NVL2(u.create_time, to_char(u.create_time,'yyyy-MM-dd HH:mm:ss'), '') desc
	</select>
	
	<!-- 校验用户名是否存在 -->
	<select id="checkUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) num from ADMIN_USER u where u.username = #{userName}
	</select>
	
	<!-- 修改个人资料 -->
	<update id="modifyMsg" parameterType="map">
	     update 
			ADMIN_USER au 
		set au.realname = #{realName} , au.contact=#{contact}
		where au.user_id = #{adminUserId}
	</update>
	
	<!-- 获取个人资料 -->
	<select id="getAdmin" resultType="com.codyy.oc.admin.entity.AdminUser" parameterType="map">
		select
		    au.user_id    as adminUserId,
			au.username 			as userName,
			au.password 			as password,
			au.realname 			as realName,
			au.contact  			as contact,
			au.locked   			as locked ,
			au.remark   			as remark ,
			au.create_user_id	  as createUserId,
			au.create_time        as createTime,
			au.delete_flag        as deleteFlag,
			au.weixin_num           as weixin_num,
			au.position             as position
		from ADMIN_USER au 
		where au.username = #{userName} 
			and au.user_id = #{adminUserId}
	</select>
	
	<!-- 获取用户列表  -->
	<select id="getAdminUserPageList" parameterType="com.codyy.commons.page.Page" resultType="com.codyy.oc.admin.entity.AdminUser">
		select
			au.user_id    as userId,
			au.username 			as userName,
			au.password 			as password,
			au.realname 			as realName,
			au.create_time        as createTime,
			au.delete_flag        as deleteFlag,
			au.position             as position,
			au.dep_id              	as				  depId, 
			au.post_id              as            postId,
			au.work_status          as            workStatus,
			au.salary_scale         as            salaryScale,
			au.entry_date           as            entryDate,
			au.working_years        as            workingYears,
			au.salary_begin_date    as            salaryBeginDate,
			au.probation_period     as            probationPeriod,
			au.expected_date        as            expectedDate,
			au.fwq_agreement        as            fwqAgreement,
			au.fwq_num              as            fwqNum,
			au.labour_begin_time    as            labourBeginTime,
			au.labour_end_time     as            labourEndTime,
			au.sign_time            as            signTime,
			au.insurance_base       as            insuranceBase,
			au.filing_date          as            filingDate,
			au.leave_date           as            leaveDate,
			au.retired_date         as            retiredDate,
			dep.name as depName,
			po.name as postName,
			po.salary_scale as postPc,
			 <include refid="UserDetail_Column_List" />
		from ADMIN_USER au 
		left join ADMIN_USER_DETAIL ad
		 on au.user_id = ad.user_id
		left join DEPARTMENT dep 
		 on dep.dep_id = au.dep_id 
		left join POSITION po 
		 on po.post_id = au.post_id 
		where 1 = 1
			<if test="map.userName!= null and  map.userName!=''">
				and au.username like concat('%',#{map.userName},'%') 
			</if>
			<if test="map.realName != null and map.realName !=''">
				and au.realname like concat('%',#{map.realName},'%')  
			</if>
			<if test="map.depId != null and map.depId !=''">
				and au.dep_id = #{map.depId}
			</if>
			<if test="map.postId != null and map.postId !=''">
				and au.post_id = (#{map.postId})
			</if>
			<if test="map.position != null and map.position !=''">
				and au.position = #{map.position}
			</if>
			
			order by postPc,au.create_time DESC 
		
	</select>
	<!-- 获取用户数量 -->
	<select id="getAdminUserCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select
			count(1)
		from ADMIN_USER au
		where
			1 = 1
			<if test="userName!=null and userName!=''">
				and au.username like '%' || #{userName} || '%' ESCAPE '/'
			</if>
			<if test="realName!= null and realName!=''">
				and au.realname like '%' || #{realName} || '%' ESCAPE '/'
			</if>
			<if test="contact!= null and contact!='' ">
				and au.contact like '%' || #{contact} || '%' ESCAPE '/'
			</if>
			<if test="position!= null and position!='' ">
				and au.position like '%' || #{position} || '%' ESCAPE '/'
			</if>
			<if test="state != null and state!='' and state!='-1' ">
				and au.locked=#{state}
			</if>
		    <if test="projectId != null and projectId!='' ">
				and (au.user_id in (
				              select pr.user_id from  project_r_user pr 
                                       left join ADMIN_USER  a
                                            on pr.user_id=a.user_id
                                            where pr.project_id=#{projectId}
                                            and  a.locked='Y') 
                            or user_id in (select a.user_id
                                                  from project p
                                   left join  ADMIN_USER a
                                       on a.user_id=p.manager_id
                                       
                                   where  p.project_id=#{projectId}  
                                      
                                 ) 

				     or au.locked='N')
			</if>
	</select>
	<select id="checkUserState" parameterType="String" resultType="com.codyy.oc.admin.entity.AdminUser">
	    select 
	        au.user_id as adminUserId,
			au.username as userName,
			au.realname as realName,
			au.locked   as locked
	    from ADMIN_USER au
	    where au.user_id=#{userId}
	</select>
	
	<update id="updatePaswd"  parameterType="com.codyy.oc.admin.entity.AdminUser" >
		update ADMIN_USER au set au.password =  #{password} where au.user_id = #{userId}
	</update>
	
	<select id="getAllAdminUserIDs" resultType="java.lang.String">
		select user_id from ADMIN_USER where position='ADMIN' and delete_flag='N'
	</select>
	
	 <resultMap id="DefaultResultMap" type="com.codyy.oc.admin.entity.AdminUser">
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="delete_flag" jdbcType="CHAR" property="deleteFlag" />
    <result column="dep_id" jdbcType="VARCHAR" property="depId" />
    <result column="post_id" jdbcType="VARCHAR" property="postId" />
    <result column="work_status" jdbcType="VARCHAR" property="workStatus" />
    <result column="salary_scale" jdbcType="INTEGER" property="salaryScale" />
    <result column="entry_date" jdbcType="TIMESTAMP" property="entryDate" />
    <result column="working_years" jdbcType="DOUBLE" property="workingYears" />
    <result column="salary_begin_date" jdbcType="TIMESTAMP" property="salaryBeginDate" />
    <result column="probation_period" jdbcType="TIMESTAMP" property="probationPeriod" />
    <result column="expected_date" jdbcType="TIMESTAMP" property="expectedDate" />
    <result column="fwq_agreement" jdbcType="VARCHAR" property="fwqAgreement" />
    <result column="fwq_num" jdbcType="INTEGER" property="fwqNum" />
    <result column="labour_begin_time" jdbcType="TIMESTAMP" property="labourBeginTime" />
    <result column="labour_end_time" jdbcType="TIMESTAMP" property="labourEndTime" />
    <result column="sign_time" jdbcType="INTEGER" property="signTime" />
    <result column="insurance_base" jdbcType="INTEGER" property="insuranceBase" />
    <result column="filing_date" jdbcType="TIMESTAMP" property="filingDate" />
    <result column="leave_date" jdbcType="TIMESTAMP" property="leaveDate" />
    <result column="retired_date" jdbcType="TIMESTAMP" property="retiredDate" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
  
  <insert id="insertSelective" parameterType="com.codyy.oc.admin.entity.AdminUser">
    insert into ADMIN_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null and userId !='' ">
        user_id,
      </if>
      <if test="userName != null and userName !=''">
        username,
      </if>
      <if test="password != null and password !=''">
        password,
      </if>
      <if test="realName != null and realName !=''">
        realname,
      </if>
      <if test="createTime != null and createTime !=''">
        create_time,
      </if>
      <if test="deleteFlag != null and deleteFlag !=''">
        delete_flag,
      </if>
      <if test="depId != null and depId !=''">
        dep_id,
      </if>
      <if test="postId != null and postId !=''">
        post_id,
      </if>
      <if test="workStatus != null and workStatus !=''">
        work_status,
      </if>
      <if test="salaryScale != null and salaryScale !=''">
        salary_scale,
      </if>
      <if test="entryDate != null and entryDate !=''">
        entry_date,
      </if>
      <if test="workingYears != null and workingYears !=''">
        working_years,
      </if>
      <if test="salaryBeginDate != null and salaryBeginDate !=''">
        salary_begin_date,
      </if>
      <if test="probationPeriod != null and probationPeriod !=''">
        probation_period,
      </if>
      <if test="expectedDate != null and expectedDate !=''">
        expected_date,
      </if>
      <if test="fwqAgreement != null and fwqAgreement !=''">
        fwq_agreement,
      </if>
      <if test="fwqNum != null and fwqNum !=''">
        fwq_num,
      </if>
      <if test="labourBeginTime != null and labourBeginTime !=''">
        labour_begin_time,
      </if>
      <if test="labourEndTime != null and labourEndTime !=''">
        labour_end_time,
      </if>
      <if test="signTime != null and signTime !=''">
        sign_time,
      </if>
      <if test="insuranceBase != null and insuranceBase !=''">
        insurance_base,
      </if>
      <if test="filingDate != null and filingDate !=''">
        filing_date,
      </if>
      <if test="leaveDate != null and leaveDate !=''">
        leave_date,
      </if>
      <if test="retiredDate != null and retiredDate !=''">
        retired_date,
      </if>
      <if test="position != null and position !=''">
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null and userId !=''">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null and userName !=''">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password !=''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null and realName !=''">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime !=''">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null and deleteFlag !=''">
        #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="depId != null and depId !=''">
        #{depId,jdbcType=VARCHAR},
      </if>
      <if test="postId != null and postId !=''">
        #{postId,jdbcType=VARCHAR},
      </if>
      <if test="workStatus != null and workStatus !=''">
        #{workStatus,jdbcType=VARCHAR},
      </if>
      <if test="salaryScale != null and salaryScale !=''">
        #{salaryScale,jdbcType=INTEGER},
      </if>
      <if test="entryDate != null and entryDate !=''">
        #{entryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="workingYears != null and workingYears !=''">
        #{workingYears,jdbcType=DOUBLE},
      </if>
      <if test="salaryBeginDate != null and salaryBeginDate !=''">
        #{salaryBeginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="probationPeriod != null and probationPeriod !=''">
        #{probationPeriod,jdbcType=TIMESTAMP},
      </if>
      <if test="expectedDate != null and expectedDate !=''">
        #{expectedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fwqAgreement != null and fwqAgreement !=''">
        #{fwqAgreement,jdbcType=VARCHAR},
      </if>
      <if test="fwqNum != null and fwqNum !=''">
        #{fwqNum,jdbcType=INTEGER},
      </if>
      <if test="labourBeginTime != null and labourBeginTime !=''">
        #{labourBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labourEndTime != null and labourEndTime !=''">
        #{labourEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signTime != null and signTime !=''">
        #{signTime,jdbcType=INTEGER},
      </if>
      <if test="insuranceBase != null and insuranceBase !=''">
        #{insuranceBase,jdbcType=INTEGER},
      </if>
      <if test="filingDate != null and filingDate !=''">
        #{filingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveDate != null and leaveDate !=''">
        #{leaveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="retiredDate != null and retiredDate !=''">
        #{retiredDate,jdbcType=TIMESTAMP},
      </if>
      <if test="position != null and position !=''">
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  <!-- 根据用户的id来获取对应用户的所有信息-->
	<select id="getManagerIdByUserId" parameterType="java.lang.String" resultType="java.lang.String">
	    SELECT
	au.user_id
FROM
	ADMIN_USER au
WHERE
	au.position = 'MANAGER'
AND au.dep_id = (
	SELECT
		a.dep_id
	FROM
		ADMIN_USER a
	WHERE
		a.user_id = #{userId})
	</select>
	
	<select id="getchartsdata" resultType="com.codyy.oc.admin.entity.ChartPieData" >
		<![CDATA[	select 'marrage_yh' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.marriage = '已婚' 
UNION ALL
select 'marrage_wh' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.marriage = '未婚'
UNION ALL
select 'education_bkyx' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.education = '本科以下'
UNION ALL
select 'education_bk' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.education = '本科'
UNION ALL
select 'education_ss' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.education = '硕士'
UNION ALL
select 'education_bs' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.education = '博士' AND au.user_id != 'admin'
UNION ALL
select 'work_status_zs' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where au.work_status = '正式' AND au.user_id != 'admin'
UNION ALL
select 'work_status_sy' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where au.work_status = '试用' AND au.user_id != 'admin'
UNION ALL
select 'age_30' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.age <= 30 AND au.user_id != 'admin'
UNION ALL
select 'age_35' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.age >30 and ad.age <=35 AND au.user_id != 'admin'
UNION ALL
select 'age_40' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.age >35 and ad.age <=40 AND au.user_id != 'admin'
UNION ALL
select 'age_40up' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where ad.age > 40 AND au.user_id != 'admin'
UNION ALL
select 'work_yesr_1' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where au.working_years <= 1 AND au.user_id != 'admin'
UNION ALL
select 'work_yesr_2' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where au.working_years > 1 and au.working_years <= 2 AND au.user_id != 'admin'
UNION ALL
select 'work_yesr_5' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where au.working_years > 2 and au.working_years <= 5 AND au.user_id != 'admin'
UNION ALL
select 'work_yesr_10' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where au.working_years > 5 and au.working_years <= 10 AND au.user_id != 'admin'
UNION ALL
select 'work_yesr_10up' as name ,count(*) as 'value' from ADMIN_USER au LEFT JOIN ADMIN_USER_DETAIL ad on au.user_id = ad.user_id where au.working_years > 10 AND au.user_id != 'admin'
UNION ALL
SELECT 'dep_ysec' as name ,count(*) FROM ADMIN_USER au where au.dep_id = '1' AND au.user_id != 'admin'
UNION ALL
SELECT 'dep_gmo' as name ,count(*) FROM ADMIN_USER au where au.dep_id = '2' AND au.user_id != 'admin'
UNION ALL
SELECT 'dep_atd' as name ,count(*) FROM ADMIN_USER au where au.dep_id = '3' AND au.user_id != 'admin'
UNION ALL
SELECT 'dep_ces' as name ,count(*) FROM ADMIN_USER au where au.dep_id = '4' AND au.user_id != 'admin'
UNION ALL
SELECT 'dep_ssc' as name ,count(*) FROM ADMIN_USER au where au.dep_id = '5' AND au.user_id != 'admin']]>  
	</select>
</mapper>