<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codyy.oc.admin.dao.ContractMapper">
  <resultMap id="BaseResultMap" type="com.codyy.oc.admin.entity.Contract">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="type" jdbcType="VARCHAR" property="contractType" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="cost" jdbcType="INTEGER" property="cost" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="serialid" jdbcType="VARCHAR" property="serialid" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="cost_time" jdbcType="TIMESTAMP" property="costTime" />
  	<result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
	<result column="remakes" jdbcType="VARCHAR" property="remakes" />
  </resultMap>
  <sql id="Base_Column_List">
    id, contract_id, type, content, dept, cost, company, url, serialid, status, create_time, cost_time, create_user_id, remakes
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CONTRACT
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByContractId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CONTRACT
    where contract_id = #{contract_id,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from CONTRACT
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.codyy.oc.admin.entity.Contract">
    insert into CONTRACT (id, contract_id, type, 
      content, dept, cost, 
      company, url, serialid, create_time, cost_time, create_user_id, status, remakes
      )
    values (#{id,jdbcType=VARCHAR}, #{contractId,jdbcType=VARCHAR}, #{contractType,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, #{cost,jdbcType=INTEGER}, 
      #{company,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{serialid,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{costTime,jdbcType=TIMESTAMP}
      , #{createUserId,jdbcType=VARCHAR}, '00', #{remakes,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.codyy.oc.admin.entity.Contract">
    insert into CONTRACT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="contractType != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="serialid != null">
        serialid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="costTime != null">
        cost_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remakes != null">
        remakes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="serialid != null">
        #{serialid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="costTime != null">
        #{cost_time,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{create_user_id,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="remakes != null">
        #{remakes,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.codyy.oc.admin.entity.Contract">
    update CONTRACT
    <set>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        type = #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="serialid != null">
        serialid = #{serialid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="costTime != null">
        cost_time = #{costTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="remakes != null">
        status = #{remakes,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.codyy.oc.admin.entity.Contract">
    update CONTRACT
    set contract_id = #{contractId,jdbcType=VARCHAR},
      type = #{contractType,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      serialid = #{serialid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      cost_time = #{costTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      remakes = #{remakes,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update> 
  <select id="getAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CONTRACT
  </select>
  
  <select id="getContractPageList" parameterType="com.codyy.commons.page.Page" resultType="com.codyy.oc.admin.vo.ContractVO">
		SELECT
			contract.id as id,
			contract.contract_id AS contractId,
			contract.type AS contractType,
			contract.content AS content,
			contract.dept AS dept,
			contract.cost AS cost,
			contract.company as company,
			contract.url as url,
			contract.serialid as serialid,
			contract.status as status,
			contract.remakes as remakes,
			'view' as editMode
		FROM
			CONTRACT contract
		where 1=1 
			
			<if test="map.contactType != null and  map.contactType != ''">
				AND contract.type = #{map.contactType}
			</if>
			
			<if test="map.contactId != null and  map.contactId != ''">
				AND contract.contractId like '%' #{map.contactId} '%' 
			</if>
			
			<if test="map.content != null and  map.content != ''">
				AND contract.content like '%'   #{map.content}  '%' 
			</if>
			
			<if test="map.userId != null and  map.userId != ''">
				AND contract.create_user_id = #{map.userId}
			</if>
			
			<if test="map.startTime != null and map.startTime !=''">
				AND contract.create_time <![CDATA[ >= ]]> #{map.startTime}
			</if>
			
			<if test="map.endTime != null and map.endTime != ''">
				AND contract.create_time <![CDATA[ <= ]]> #{map.endTime}
			</if>
		
		ORDER BY contract.create_time DESC
	
	</select>
  
  
  
</mapper>