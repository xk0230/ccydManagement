<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codyy.oc.admin.dao.RecruitAuditMapper">
  <resultMap id="BaseResultMap" type="com.codyy.oc.admin.entity.RecruitAudit">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="recruit_id" jdbcType="VARCHAR" property="recruitId" />
    <result column="recruit_num" jdbcType="INTEGER" property="recruitNum" />
    <result column="audit_user" jdbcType="VARCHAR" property="auditUser" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, recruit_id, recruit_num, audit_user, result, audit_time, remark, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from RECRUIT_AUDIT
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from RECRUIT_AUDIT
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.codyy.oc.admin.entity.RecruitAudit">
    insert into RECRUIT_AUDIT (id, recruit_id, recruit_num, 
      audit_user, result, audit_time, 
      remark, create_time)
    values (#{id,jdbcType=VARCHAR}, #{recruitId,jdbcType=VARCHAR}, #{recruitNum,jdbcType=INTEGER}, 
      #{auditUser,jdbcType=VARCHAR}, #{result,jdbcType=INTEGER}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.codyy.oc.admin.entity.RecruitAudit">
    insert into RECRUIT_AUDIT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recruitId != null">
        recruit_id,
      </if>
      <if test="recruitNum != null">
        recruit_num,
      </if>
      <if test="auditUser != null">
        audit_user,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="recruitId != null">
        #{recruitId,jdbcType=VARCHAR},
      </if>
      <if test="recruitNum != null">
        #{recruitNum,jdbcType=INTEGER},
      </if>
      <if test="auditUser != null">
        #{auditUser,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.codyy.oc.admin.entity.RecruitAudit">
    update RECRUIT_AUDIT
    <set>
      <if test="recruitId != null">
        recruit_id = #{recruitId,jdbcType=VARCHAR},
      </if>
      <if test="recruitNum != null">
        recruit_num = #{recruitNum,jdbcType=INTEGER},
      </if>
      <if test="auditUser != null">
        audit_user = #{auditUser,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.codyy.oc.admin.entity.RecruitAudit">
    update RECRUIT_AUDIT
    set recruit_id = #{recruitId,jdbcType=VARCHAR},
      recruit_num = #{recruitNum,jdbcType=INTEGER},
      audit_user = #{auditUser,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="getMaxRecruitNumByRecId" parameterType="java.lang.String" resultType="java.lang.Integer">
  		select max(recruit_num) from RECRUIT_AUDIT  where recruit_id = #{recId,jdbcType=VARCHAR}
  </select>
  
    <select id="selectUnauditByid" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(*) from RECRUIT_AUDIT where id=#{id} and result is null
  </select>
  
     <select id="getUnpassOrNullNum" parameterType="java.lang.String" resultType="java.lang.Integer">
  	SELECT
	count(*)
FROM
	RECRUIT_AUDIT 
WHERE
	recruit_id = ( SELECT recruit_id FROM RECRUIT_AUDIT WHERE id = #{id} ) 
	AND recruit_num = ( SELECT recruit_num FROM RECRUIT_AUDIT WHERE id = #{id} ) 
	AND ( result IS NULL OR result =- 1 )
  </select>
  
  <update id="passById" parameterType="java.lang.String">
  	update RECRUIT r set r.status = 'audited' where r.id = (select  	ra.recruit_id  from RECRUIT_AUDIT ra where ra.id = #{id})
  </update>
  <update id="setUnPassById" parameterType="java.lang.String">
  	update RECRUIT r set r.status = 'reject' where r.id = (select  	ra.recruit_id  from RECRUIT_AUDIT ra where ra.id = #{id})
  </update>
  
</mapper>